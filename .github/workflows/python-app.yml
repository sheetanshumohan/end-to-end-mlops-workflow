name: end to end workflow - part 1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Steps-1 Setup the environment
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Steps-2 Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Steps-3 Run linters and tests
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Steps-4 Testing
    - name: Test with pytest
      run: |
        pytest
  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to the Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Build and push Docker image
          id: docker-build
          uses: docker/build-push-action@v3
          with:
            context: .
            file: DockerFile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/mlops-end-to-end-workflow-part-1:latest
            cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/mlops-end-to-end-workflow-part-1:cache
            cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/mlops-end-to-end-workflow-part-1:cache,mode=max
        
        - name: Image Digest
          run: echo "Image digest is ${{ steps.docker-build.outputs.digest }}"

